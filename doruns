#!/bin/bash
FILEBASE=est.trunc.fa
NRECORDS=6444875
TIME='/usr/bin/time -p'

rm -f *.time
let usefilenum=0

if [ $(type -P "gzcat") ]
then
    ZCAT=gzcat
else
    ZCAT=zcat
fi

function clearcache()
{
    let usefilenum=usefilenum+1
    let usefilenum=usefilenum%5
    FILEPREFIX="${FILEBASE}.${usefilenum}"
}

function dorun() 
{
    frac=$1
    trial=$2
    nout=$3
    option=$4
    infile=$5
    resultfile=$6
    extension=$7

    infilename="${infile}.${usefilenum}${extension}"

    echo -n "$frac	$trial	$nout	" >> $resultfile
    echo "$TIME ./sample.py -f $infile -n $nout $option"
    ($TIME ./sample.py -f $infilename -n $nout $option >> /dev/null ) 2>&1 | awk '{printf "%s\t",$2} END{print ""}' >> $resultfile
}

for frac in 0.001 0.002 0.005 0.01 0.02 0.05 0.1 0.2 0.5
do
    nout=$( echo "$frac * $NRECORDS / 1" | bc ) 
    for trial in 1 2 3 4 5
    do
        dorun $frac $trial $nout --seek $FILEBASE uncomp-seek.time ""
        clearcache
        dorun $frac $trial $nout --reservoir $FILEBASE uncomp-reservoir.time ""
        clearcache
    done
done

for frac in 0.001 0.002 0.005 0.01 0.02 0.05 0.1 0.2 0.5
do
    nout=$( echo "$frac * $NRECORDS / 1" | bc ) 
    for trial in 1 2 3 4 5
    do
        echo -n "$frac  $trial  $nout	" >> cat-reservoir.time
        ( $TIME cat $FILEPREFIX | ./sample.py -n $nout --reservoir >> /dev/null )  2>&1 | awk '{printf "%s\t",$2} END{print ""}' >> cat-reservoir.time
        clearcache

        echo -n "$frac  $trial  $nout	" >> zcat-reservoir.time
        ( $TIME $ZCAT "${FILEPREFIX}.gz" | ./sample.py -n $nout --reservoir >> /dev/null ) 2>&1 | awk '{printf "%s\t",$2} END{print ""}' >> zcat-reservoir.time
        clearcache

        dorun $frac $trial $nout --reservoir $FILEBASE reservoir.time ".gz"
        clearcache

    done
done
for frac in 0.001 0.002 0.005 0.01 0.02 0.05 0.1
do
    nout=$( echo "$frac * $NRECORDS / 1" | bc ) 
    for trial in 1 2 3 
    do
        dorun $frac $trial $nout --seek $FILEBASE seek.time ".gz"
        clearcache
    done
done
